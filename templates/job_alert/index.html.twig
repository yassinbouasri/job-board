{# templates/job_alert/new.html.twig #}
{% extends 'base.html.twig' %}

{% block title %}Job Alerts{% endblock %}

{% block body %}
    <div class="max-w-4xl mx-auto py-8 px-4 sm:px-6 lg:px-8">
        <div class="bg-white shadow rounded-lg overflow-hidden">
            {# Tab Navigation #}
            <div class="border-b border-gray-200">
                <nav class="flex -mb-px">
                    <a href="#alerts" class="tab-link w-1/2 py-4 px-1 text-center border-b-2 font-medium text-sm border-indigo-500 text-indigo-600" data-tab="alerts">
                        My Job Alerts
                    </a>
                    <a href="#create" class="tab-link w-1/2 py-4 px-1 text-center border-b-2 font-medium text-sm border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300" data-tab="create">
                        Create New Alert
                    </a>
                </nav>
            </div>

            {# Tab Contents #}
            <div class="p-6">
                {# Alerts List Tab - Initially visible #}
                <div id="alerts-tab" class="tab-content">
                    <h2 class="text-xl font-bold text-gray-900 mb-6">Your Job Alerts</h2>

                    {% if job_alerts|length == 0 %}
                        <div class="text-center py-8">
                            <p class="text-gray-500">You don't have any job alerts yet.</p>
                        </div>
                    {% else %}
                        <div class="space-y-4">
                            {% for alert in job_alerts %}
                                <div class="border rounded-lg p-4 hover:bg-gray-50">
                                    <div class="flex justify-between items-start">
                                        <div>
                                            <h3 class="font-medium text-gray-900">{{ alert.keyword }}</h3>
                                            <p class="text-sm text-gray-500 mt-1">
                                                Location: {{ alert.location }} |
                                                Frequency: {{ alert.frequency|capitalize }} |
                                                Tags: {{ alert.tags|join(', ') }}
                                            </p>
                                        </div>
                                        <div class="flex space-x-2">
                                            <form action="{{ path('app_job_alert_delete', {id: alert.id}) }}" method="POST" onsubmit="return confirm('Are you sure you want to delete this alert?')">
                                                <input type="hidden" name="_method" value="DELETE">
                                                <button type="submit" class="text-red-600 hover:text-red-900 text-sm">Delete</button>
                                            </form>
                                        </div>
                                    </div>
                                </div>
                            {% endfor %}
                        </div>
                    {% endif %}
                </div>

                {# Create Alert Tab - Initially hidden #}
                <div id="create-tab" class="tab-content hidden">
                    <h2 class="text-xl font-bold text-gray-900 mb-6">Create Job Alert</h2>

                    {{ form_start(form) }}
                    <div class="space-y-6">
                        {# Keyword Field #}
                        <div>
                            {{ form_label(form.keyword, null, {
                                'label_attr': {'class': 'block text-sm font-medium text-gray-700'}
                            }) }}
                            {{ form_widget(form.keyword) }}
                            {{ form_help(form.keyword, {
                                'help_attr': {'class': 'mt-1 text-sm text-gray-500'}
                            }) }}
                        </div>

                        {# Location Field #}
                        <div>
                            {{ form_label(form.location, null, {
                                'label_attr': {'class': 'block text-sm font-medium text-gray-700'}
                            }) }}
                            {{ form_widget(form.location) }}
                        </div>

                        {# Tags Field #}
                        <div class="tags-field">
                            {{ form_label(form.tags, null, {
                                'label_attr': {'class': 'block text-sm font-medium text-gray-700'}
                            }) }}

                            {{ form_errors(form.tags) }}

                            <div class="tags-container mb-2"
                                 data-prototype="{{ form_widget(form.tags.vars.prototype)|e('html_attr') }}">
                                {% for tag in form.tags %}
                                    <div class="tag-entry mb-2">
                                        {{ form_widget(tag) }}
                                    </div>
                                {% endfor %}
                            </div>
                            {% do form.tags.setRendered %}

                            <button type="button" class="add-tag-btn inline-flex items-center px-3 py-1 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                                Add Tag
                            </button>
                        </div>

                        {# Frequency Field #}
                        <div>
                            {{ form_label(form.frequency, null, {
                                'label_attr': {'class': 'block text-sm font-medium text-gray-700'}
                            }) }}
                            {{ form_widget(form.frequency) }}
                        </div>
                    </div>

                    <div class="mt-6 flex justify-end space-x-3">
                        <a href="{{ path('app_job_alert') }}" class="bg-white py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                            Cancel
                        </a>
                        <button type="submit" class="inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                            Save Alert
                        </button>
                    </div>
                    {{ form_end(form) }}
                </div>
            </div>
        </div>
    </div>


    <script>
        document.addEventListener('DOMContentLoaded', () => {
            // Tab functionality
            const tabLinks = document.querySelectorAll('.tab-link');
            const tabContents = document.querySelectorAll('.tab-content');

            tabLinks.forEach(link => {
                link.addEventListener('click', (e) => {
                    e.preventDefault();
                    const tabId = link.getAttribute('data-tab');

                    // Update active tab styling
                    tabLinks.forEach(l => {
                        l.classList.remove('border-indigo-500', 'text-indigo-600');
                        l.classList.add('border-transparent', 'text-gray-500', 'hover:text-gray-700', 'hover:border-gray-300');
                    });
                    link.classList.add('border-indigo-500', 'text-indigo-600');
                    link.classList.remove('border-transparent', 'text-gray-500', 'hover:text-gray-700', 'hover:border-gray-300');

                    // Show/hide content
                    tabContents.forEach(content => content.classList.add('hidden'));
                    document.getElementById(`${tabId}-tab`).classList.remove('hidden');
                });
            });

            // Tags functionality (keep your existing tags code)
            const container = document.querySelector('.tags-container');
            if (container) {
                const addButton = document.querySelector('.add-tag-btn');
                let index = container.querySelectorAll('.tag-entry').length;

                addButton.addEventListener('click', () => {
                    const prototype = container.dataset.prototype;
                    const newForm = prototype.replace(/__name__/g, index);
                    const newTag = document.createElement('div');
                    newTag.classList.add('tag-entry', 'mb-2');
                    newTag.innerHTML = newForm;
                    container.appendChild(newTag);
                    index++;
                });
            }
        });
    </script>
{% endblock %}